#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.9 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mrl"
 #"ib\"))\x00"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(1
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-snip"
 #"class-wxme.ss\" \"framework\"))\x00"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(2
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsis"
 #"-snip-wxme.rkt\" \"drracket\" \"private\"))\x00"
) 2 0 88
(3
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.rk"
 #"t\" \"drracket\" \"private\"))\x00"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 77 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 6 #"Menlo\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 0 36
#"mrlib/syntax-browser:subtitle-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 100 149 237 0 0 0 -1 -1 0
42 #"mrlib/syntax-browser:focused-syntax-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 50 205 50 0 0 0 -1 -1 0 1
#"\0"
0 75 6 #"Menlo\0"
0.0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 192 46 214 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 57 89 216 0
0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 100 149 237
0 0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 50 205 50 0
0 0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 191 255 0
0 0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 191 255 0
0 0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 152 251 152
0 0 0 -1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 152 251 152
0 0 0 -1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 25 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 45 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 47 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
0 -1           0 502 0 4 3 85
(4
 #";; The first three lines of this file were inserted by DrRacket. They"
 #" record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(5
 #";; about the language level of this file in a form that our tools can"
 #" easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 94
(6
 #"#reader(lib \"htdp-beginner-abbr-reader.ss\" \"lang\")((modname |HtDP"
 #" 4.7 Sample Ex & Ex 62|) (rea"
) 0 0 4 3 265
(7
 #"d-case-sensitive #t) (teachpacks ((lib \"image.rkt\" \"teachpack\" \""
 #"2htdp\") (lib \"universe.rkt\" \"teachpack\" \"2htdp\"))) (htdp-setti"
 #"ngs #(#t constructor repeating-decimal #f #t none #f ((lib \"image.rk"
 #"t\" \"teachpack\" \"2htdp\") (lib \"universe.rkt\" \"teachpack\" \"2h"
 #"tdp\")) #f)))"
) 0 0 4 29 1 #"\n"
0 0 25 3 1 #" "
0 0 17 3 16 #"#|Sample Problem"
0 0 17 29 1 #"\n"
0 0 17 3 90
(8
 #"Design a world program that simulates the working of a door with an a"
 #"utomatic door closer."
) 0 0 17 29 1 #"\n"
0 0 17 3 61
#"If this kind of door is locked, you can unlock it with a key."
0 0 17 29 1 #"\n"
0 0 17 3 69
(9
 #"An unlocked door is closed, but someone pushing at the door opens it."
) 0 0 17 29 1 #"\n"
0 0 17 3 4 #"Once"
0 0 17 3 109
(10
 #" the person has passed through the door and lets go, the automatic do"
 #"or takes over and closes the door again."
) 0 0 17 29 1 #"\n"
0 0 17 3 48 #"When a door is closed, it can be locked again.|#"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 65
#"; Attempt to do this by writing this out before reading the text."
0 0 25 29 1 #"\n"
0 0 17 3 76
(11
 #"; 10/1: Seems like I need to add event handlers too: key events are m"
 #"issing."
) 0 0 25 29 1 #"\n"
0 0 17 3 49 #";11/1: Error messages below. Has to do with type."
0 0 25 29 1 #"\n"
0 0 17 3 22 #"; All 18 tests passed!"
0 0 25 29 1 #"\n"
0 0 17 3 16 #";> (main LOCKED)"
0 0 25 29 1 #"\n"
0 0 17 3 3 #";>:"
0 0 17 3 47 #" expects a real as 1st argument, given \"locked\""
0 0 25 29 1 #"\n"
0 0 17 3 11 #";> (main 0)"
0 0 25 29 1 #"\n"
0 0 17 3 6 #";text:"
0 0 17 3 44 #" expects a string as first argument, given 0"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 132
(12
 #";13/1: Was able to get the locked, closed and open states, but unable"
 #" to get the ticker to work. Referred to the text, and reworked."
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 21 #"; World Design recipe"
0 0 25 29 1 #"\n"
0 0 17 3 86
(13
 #"; Step1: define world states, identifying constants. Also, to use sym"
 #"bolic constants. "
) 0 0 25 29 1 #"\n"
0 0 17 3 84
(14
 #"; Step2: identify which properties change over time, and which data s"
 #"ymbolizes that."
) 0 0 25 29 1 #"\n"
0 0 17 3 170
(15
 #"; Step3: idnetify which functions are needed. For big bang, a render "
 #"will show sequence of states as images; on-tick will show passage of "
 #"time; event-handlers will handle"
) 0 0 25 29 1 #"\n"
0 0 17 3 90
(16
 #"; keystrokes or something else. end function not needed here, as this"
 #" program is cyclical."
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 85
(17
 #"; Step1: define world states, identifying constants. Also, to use sym"
 #"bolic constants."
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 6 #"LOCKED"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"locked\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 6 #"CLOSED"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"closed\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"OPEN"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"open\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 5 #"MTSCN"
0 0 25 3 2 #" ("
0 0 14 3 11 #"empty-scene"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"TIME"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 84 14 0 0 25 29 1 #"\n"
0 0 17 3 29 #"; After \"open\", time passes/."
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 6 #"render"
0 0 25 3 1 #" "
0 0 14 3 6 #"LOCKED"
0 0 25 3 2 #") "
0 6           4 22 1732
(18
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 100 0) #(struct:po"
 #"int 100 20) #(struct:point 0 20)) #(struct:translate 0 0 #(struct:ove"
 #"rlay #(struct:translate 32.0 4.0 #(struct:overlay #(struct:translate "
 #"0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct"
 #":translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 0 0 #(struct:translate 1.5 6.0 #(struct:text \""
 #"l\" 0 1 \"red\" 12 #f swiss normal normal #f))) #(struct:translate 3."
 #"0 0.0 #(struct:translate 3.5 6.0 #(struct:text \"o\" 0 1 \"red\" 12 #"
 #"f swiss normal normal #f))))) #(struct:translate 10.0 0.0 #(struct:tr"
 #"anslate 3.0 6.0 #(struct:text \"c\" 0 1 \"red\" 12 #f swiss normal no"
 #"rmal #f))))) #(struct:translate 16.0 0.0 #(struct:translate 3.0 6.0 #"
 #"(struct:text \"k\" 0 1 \"red\" 12 #f swiss normal normal #f))))) #(st"
 #"ruct:translate 22.0 0.0 #(struct:translate 3.5 6.0 #(struct:text \"e"
 #"\" 0 1 \"red\" 12 #f swiss normal normal #f))))) #(struct:translate 2"
 #"9.0 0.0 #(struct:translate 3.5 6.0 #(struct:text \"d\" 0 1 \"red\" 12"
 #" #f swiss normal normal #f))))) #(struct:translate 0 0 #(struct:crop "
 #"(#(struct:point 0 0) #(struct:point 100 0) #(struct:point 100 20) #(s"
 #"truct:point 0 20)) #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled"
 #"-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 100 0 0 0) #(struct:pul"
 #"led-point 0 0 100 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) outlin"
 #"e #(struct:pen \"black\" 2 solid round round)))) #(struct:translate 0"
 #" 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0"
 #" 0 0 0 0) #(struct:pulled-point 0 0 100 0 0 0) #(struct:pulled-point "
 #"0 0 100 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"white\")))"
 #"))))))) #(struct:bb 100 20 20.0) #f)"
) 0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 6 #"render"
0 0 25 3 1 #" "
0 0 14 3 6 #"CLOSED"
0 0 25 3 2 #") "
0 6           4 22 1731
(19
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 100 0) #(struct:po"
 #"int 100 20) #(struct:point 0 20)) #(struct:translate 0 0 #(struct:ove"
 #"rlay #(struct:translate 32.0 4.0 #(struct:overlay #(struct:translate "
 #"0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct"
 #":translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 0 0 #(struct:translate 3.0 6.0 #(struct:text \""
 #"c\" 0 1 \"red\" 12 #f swiss normal normal #f))) #(struct:translate 6."
 #"0 0.0 #(struct:translate 1.5 6.0 #(struct:text \"l\" 0 1 \"red\" 12 #"
 #"f swiss normal normal #f))))) #(struct:translate 9.0 0.0 #(struct:tra"
 #"nslate 3.5 6.0 #(struct:text \"o\" 0 1 \"red\" 12 #f swiss normal nor"
 #"mal #f))))) #(struct:translate 16.0 0.0 #(struct:translate 3.0 6.0 #("
 #"struct:text \"s\" 0 1 \"red\" 12 #f swiss normal normal #f))))) #(str"
 #"uct:translate 22.0 0.0 #(struct:translate 3.5 6.0 #(struct:text \"e\""
 #" 0 1 \"red\" 12 #f swiss normal normal #f))))) #(struct:translate 29."
 #"0 0.0 #(struct:translate 3.5 6.0 #(struct:text \"d\" 0 1 \"red\" 12 #"
 #"f swiss normal normal #f))))) #(struct:translate 0 0 #(struct:crop (#"
 #"(struct:point 0 0) #(struct:point 100 0) #(struct:point 100 20) #(str"
 #"uct:point 0 20)) #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-p"
 #"oint 0 0 0 0 0 0) #(struct:pulled-point 0 0 100 0 0 0) #(struct:pulle"
 #"d-point 0 0 100 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) outline "
 #"#(struct:pen \"black\" 2 solid round round)))) #(struct:translate 0 0"
 #" #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0"
 #" 0 0 0) #(struct:pulled-point 0 0 100 0 0 0) #(struct:pulled-point 0 "
 #"0 100 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"white\")))))"
 #"))))) #(struct:bb 100 20 20.0) #f)"
) 0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 6 #"render"
0 0 25 3 1 #" "
0 0 14 3 4 #"OPEN"
0 0 25 3 2 #") "
0 6           4 22 1418
(20
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 100 0) #(struct:po"
 #"int 100 20) #(struct:point 0 20)) #(struct:translate 0 0 #(struct:ove"
 #"rlay #(struct:translate 36.0 4.0 #(struct:overlay #(struct:translate "
 #"0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct"
 #":translate 0 0 #(struct:translate 3.5 6.0 #(struct:text \"o\" 0 1 \"r"
 #"ed\" 12 #f swiss normal normal #f))) #(struct:translate 7.0 0.0 #(str"
 #"uct:translate 3.5 6.0 #(struct:text \"p\" 0 1 \"red\" 12 #f swiss nor"
 #"mal normal #f))))) #(struct:translate 14.0 0.0 #(struct:translate 3.5"
 #" 6.0 #(struct:text \"e\" 0 1 \"red\" 12 #f swiss normal normal #f))))"
 #") #(struct:translate 21.0 0.0 #(struct:translate 3.5 6.0 #(struct:tex"
 #"t \"n\" 0 1 \"red\" 12 #f swiss normal normal #f))))) #(struct:transl"
 #"ate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 100 0) #(st"
 #"ruct:point 100 20) #(struct:point 0 20)) #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 1"
 #"00 0 0 0) #(struct:pulled-point 0 0 100 20 0 0) #(struct:pulled-point"
 #" 0 0 0 20 0 0)) outline #(struct:pen \"black\" 2 solid round round)))"
 #") #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(s"
 #"truct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 100 0 0 0) "
 #"#(struct:pulled-point 0 0 100 20 0 0) #(struct:pulled-point 0 0 0 20 "
 #"0 0)) 255 \"white\")))))))))) #(struct:bb 100 20 20.0) #f)"
) 0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 6 #"render"
0 0 25 3 1 #" "
0 0 14 3 2 #"ds"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 2 #" ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"   [("
0 0 14 3 7 #"string?"
0 0 25 3 1 #" "
0 0 14 3 2 #"ds"
0 0 25 3 2 #")("
0 0 14 3 11 #"place-image"
0 0 25 3 2 #" ("
0 0 14 3 4 #"text"
0 0 25 3 1 #" "
0 0 14 3 2 #"ds"
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #") "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 14 3 5 #"MTSCN"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"   [("
0 0 14 3 3 #"and"
0 0 25 3 1 #"("
0 0 14 3 7 #"number?"
0 0 25 3 1 #" "
0 0 14 3 2 #"ds"
0 0 25 3 2 #")("
0 0 14 3 1 #">"
0 0 25 3 2 #"  "
0 0 14 3 2 #"ds"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 4 #")) ("
0 0 14 3 11 #"place-image"
0 0 25 3 2 #" ("
0 0 14 3 4 #"text"
0 0 25 3 1 #" "
0 0 14 3 4 #"OPEN"
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #") "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 14 3 5 #"MTSCN"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 11 #"place-image"
0 0 25 3 2 #" ("
0 0 14 3 4 #"text"
0 0 25 3 1 #" "
0 0 14 3 2 #"ds"
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #") "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 14 3 5 #"MTSCN"
0 0 25 3 4 #")]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 27 #"; DoorState ke -> DoorState"
0 0 25 29 1 #"\n"
0 0 17 3 30 #"; DoorState ticks -> DoorState"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 35 #"; Step3: identify functions needed:"
0 0 25 29 1 #"\n"
0 0 17 3 60
#"; a. unlock-door -> only used for locked state, trigger: \"u\""
0 0 25 29 1 #"\n"
0 0 17 3 85
(21
 #"; b. open-door -> only used for closed state, trigger: \" \"; also cl"
 #"oses after X ticks"
) 0 0 25 29 1 #"\n"
0 0 17 3 5 #";    "
0 0 25 29 1 #"\n"
0 0 17 3 58
#"; c. lock-door -> only used for closed state, trigger: \"l\""
0 0 25 29 1 #"\n"
0 0 17 3 47 #";d. render-state -> show images for each state."
0 0 25 29 1 #"\n"
0 0 17 3 32 #";e. main -> to run world program"
0 0 25 29 1 #"\n"
0 0 17 3 2 #";f"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 5 #";3.a."
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"door-action"
0 0 25 3 1 #" "
0 0 14 3 6 #"LOCKED"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"u\""
0 0 25 3 2 #") "
0 0 14 3 6 #"CLOSED"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"door-action"
0 0 25 3 1 #" "
0 0 14 3 6 #"LOCKED"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"l\""
0 0 25 3 2 #") "
0 0 14 3 6 #"LOCKED"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"door-action"
0 0 25 3 1 #" "
0 0 14 3 6 #"LOCKED"
0 0 25 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 25 3 2 #") "
0 0 14 3 6 #"LOCKED"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"door-action"
0 0 25 3 1 #" "
0 0 14 3 6 #"CLOSED"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"u\""
0 0 25 3 2 #") "
0 0 14 3 6 #"CLOSED"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"door-action"
0 0 25 3 1 #" "
0 0 14 3 6 #"CLOSED"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"l\""
0 0 25 3 2 #") "
0 0 14 3 6 #"LOCKED"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"door-action"
0 0 25 3 1 #" "
0 0 14 3 6 #"CLOSED"
0 0 25 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 25 3 2 #") "
0 0 14 3 4 #"OPEN"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"door-action"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #" "
0 0 14 3 1 #"k"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 25 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 6 #"LOCKED"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 2 #")("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 1 #"k"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"u\""
0 0 25 3 3 #")) "
0 0 14 3 6 #"CLOSED"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"     [("
0 0 14 3 3 #"and"
0 0 25 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 6 #"CLOSED"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 2 #")("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 1 #"k"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"l\""
0 0 25 3 3 #")) "
0 0 14 3 6 #"LOCKED"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"     [("
0 0 14 3 3 #"and"
0 0 25 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 6 #"CLOSED"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 2 #")("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 1 #"k"
0 0 25 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 25 3 3 #")) "
0 0 14 3 4 #"OPEN"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #"]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 4 #";3.b"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"door-closer"
0 0 25 3 1 #" "
0 0 14 3 6 #"LOCKED"
0 0 25 3 2 #") "
0 0 14 3 6 #"LOCKED"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"door-closer"
0 0 25 3 1 #" "
0 0 14 3 6 #"CLOSED"
0 0 25 3 2 #") "
0 0 14 3 6 #"CLOSED"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"door-closer"
0 0 25 3 1 #" "
0 0 14 3 4 #"OPEN"
0 0 25 3 2 #") "
0 0 14 3 6 #"CLOSED"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"door-closer"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 6 #"LOCKED"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 2 #") "
0 0 14 3 6 #"LOCKED"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 6 #"CLOSED"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 2 #") "
0 0 14 3 6 #"CLOSED"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 4 #"OPEN"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 2 #") "
0 0 14 3 6 #"CLOSED"
0 0 25 3 3 #"]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 15 #"door-simulation"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 8 #"big-bang"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ["
0 0 14 3 7 #"to-draw"
0 0 25 3 1 #" "
0 0 14 3 6 #"render"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ["
0 0 14 3 6 #"on-key"
0 0 25 3 1 #" "
0 0 14 3 11 #"door-action"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ["
0 0 14 3 7 #"on-tick"
0 0 25 3 1 #" "
0 0 14 3 11 #"door-closer"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 4 #"])) "
0 0 17 3 79
(22
 #"#|Exercise 62. During a door simulation the \xE2\x80\x9Copen\xE2\x80"
 #"\x9D state is barely visible."
) 0 0 17 29 1 #"\n"
0 0 17 3 97
(23
 #"Modify door-simulation so that the clock ticks once every three secon"
 #"ds. Rerun the simulation. |#"
) 0           0
